const BLSMultiSig = artifacts.require("BLSMultiSig");
const TestProxy = artifacts.require("./BLSTestProxy.sol");

contract("BLSMultiSig", async (accounts) =>  {
  let BLS;
  let BLSt;
  function promiseToThrow(p, msg) {
    return p.then(_ => false).catch(_ => true).then(res =>
      assert(res, msg));
   }
  beforeEach(async () => {
    BLS = await BLSMultiSig.new(67,[
      "9121282642809701931333593728297233225556711250127745709186816755779879923737",
      "19430493116922072356830709910231609246608721301711710668649991649389881488730",
      "20422461965303760684972432833393275482011872214285431434762613176151735978626",
      "298572075162454679163670333497954782367165699328351139754869100063308445382",
      "13617110937608119725159715497522173305174557569388165671955816638318382445127"
    ],[
      "8783642022119951289582979607207867126556038468480503109520224385365741455513",
      "4110959498627045907440291871300490703579626657177845575364169615082683328588",
      "4340414105609005319657729201597518376025644764079088797074616044782247204946",
      "19406526149564276287084583577153409216667341395977223898932369699699605058292",
      "5989220236822003292279415228814579004737160217409816506111930966995235750604"
    ],[20,20,20,20,20]);
    BLSt = await TestProxy.new(67,[
      "9121282642809701931333593728297233225556711250127745709186816755779879923737",
      "19430493116922072356830709910231609246608721301711710668649991649389881488730",
      "20422461965303760684972432833393275482011872214285431434762613176151735978626",
      "298572075162454679163670333497954782367165699328351139754869100063308445382",
      "13617110937608119725159715497522173305174557569388165671955816638318382445127"
    ],[
      "8783642022119951289582979607207867126556038468480503109520224385365741455513",
      "4110959498627045907440291871300490703579626657177845575364169615082683328588",
      "4340414105609005319657729201597518376025644764079088797074616044782247204946",
      "19406526149564276287084583577153409216667341395977223898932369699699605058292",
      "5989220236822003292279415228814579004737160217409816506111930966995235750604"
    ],[20,20,20,20,20]);
  })
  it("should verify a valid BLSAggregateSign", async () => {
    assert(await BLSt.testPairKey1.call());
    assert(await BLSt.testPairKey2.call());
    assert(await BLSt.testPairKey3.call());
  })
})
